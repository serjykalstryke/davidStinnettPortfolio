{"ast":null,"code":"var _jsxFileName = \"/home/davidstinnett/Documents/github/davidStinnettPortfolio/src/components/pages/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ProjectImage from '../projects/ProjectImage';\nimport ProjectFilter from '../projects/ProjectFilter';\nimport projects from '../projects/projects.json';\nimport Container from 'react-bootstrap/Container';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport { AnimateSharedLayout } from 'framer-motion'; // Loading\n\nimport ReactLoading from 'react-loading'; // State\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Portfolio = () => {\n  _s();\n\n  const [projectState, setProjectState] = useState({\n    projectList: projects,\n    filteredProjectList: projects,\n    loading: true\n  });\n  const [filterState, setFilterState] = useState('');\n  const projectListArray = projectState.projectList; // Whenever searchState (representing the input in the search bar) changes, filter the project list\n\n  useEffect(() => {\n    setProjectState({ ...projectState,\n      filteredProjectList: projectListArray.filter(project => {\n        return (// allow users to search by tech\n          project.tech.toString().toLowerCase().indexOf(filterState) !== -1\n        );\n      }),\n      loading: false\n    }); // eslint-disable-next-line\n  }, [filterState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: projectState.loading ? /*#__PURE__*/_jsxDEV(ReactLoading, {\n      type: 'bars',\n      color: 'white',\n      style: {\n        alignContent: 'center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"recentProjects otherText\",\n        children: \"Recent Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProjectFilter, {\n        filter: setFilterState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(ScrollAnimation, {\n          animateIn: \"fadeIn\",\n          animateOut: \"fadeOut\",\n          children: projectState.filteredProjectList.map(projectInfo => /*#__PURE__*/_jsxDEV(ProjectImage, {\n            layout: true,\n            projectInfo: projectInfo,\n            layoutId: \"projects\"\n          }, projectInfo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Portfolio, \"NpyUsaEVB97UFoQWMzJMvHFZ6rA=\");\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/home/davidstinnett/Documents/github/davidStinnettPortfolio/src/components/pages/Portfolio.js"],"names":["React","useState","useEffect","ProjectImage","ProjectFilter","projects","Container","ScrollAnimation","AnimateSharedLayout","ReactLoading","Portfolio","projectState","setProjectState","projectList","filteredProjectList","loading","filterState","setFilterState","projectListArray","filter","project","tech","toString","toLowerCase","indexOf","alignContent","map","projectInfo","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,mBAAT,QAAoC,eAApC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CAEA;;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC;AAC/CY,IAAAA,WAAW,EAAER,QADkC;AAE/CS,IAAAA,mBAAmB,EAAET,QAF0B;AAG/CU,IAAAA,OAAO,EAAE;AAHsC,GAAD,CAAhD;AAKA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMiB,gBAAgB,GAAGP,YAAY,CAACE,WAAtC,CARsB,CAUtB;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,eAAe,CAAC,EACd,GAAGD,YADW;AAEdG,MAAAA,mBAAmB,EAAEI,gBAAgB,CAACC,MAAjB,CAAwBC,OAAO,IAAI;AACtD,eACE;AACAA,UAAAA,OAAO,CAACC,IAAR,CAAaC,QAAb,GAAwBC,WAAxB,GAAsCC,OAAtC,CAA8CR,WAA9C,MAA+D,CAAC;AAFlE;AAID,OALoB,CAFP;AAQdD,MAAAA,OAAO,EAAE;AARK,KAAD,CAAf,CADc,CAYd;AACD,GAbQ,EAaN,CAACC,WAAD,CAbM,CAAT;AAeA,sBACE;AAAA,cACGL,YAAY,CAACI,OAAb,gBACC,QAAC,YAAD;AACE,MAAA,IAAI,EAAE,MADR;AAEE,MAAA,KAAK,EAAE,OAFT;AAGE,MAAA,KAAK,EAAE;AAAEU,QAAAA,YAAY,EAAE;AAAhB;AAHT;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC,QAAC,mBAAD;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE,QAAC,aAAD;AAAe,QAAA,MAAM,EAAER;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,SAAD;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,QAA3B;AAAoC,UAAA,UAAU,EAAC,SAA/C;AAAA,oBACGN,YAAY,CAACG,mBAAb,CAAiCY,GAAjC,CAAqCC,WAAW,iBAC/C,QAAC,YAAD;AACE,YAAA,MAAM,MADR;AAEE,YAAA,WAAW,EAAEA,WAFf;AAIE,YAAA,QAAQ,EAAC;AAJX,aAGOA,WAAW,CAACC,EAHnB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA1DD;;GAAMlB,S;;KAAAA,S;AA4DN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProjectImage from '../projects/ProjectImage';\nimport ProjectFilter from '../projects/ProjectFilter';\nimport projects from '../projects/projects.json';\nimport Container from 'react-bootstrap/Container';\n\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport { AnimateSharedLayout } from 'framer-motion';\n\n// Loading\nimport ReactLoading from 'react-loading';\n\n// State\nconst Portfolio = () => {\n  const [projectState, setProjectState] = useState({\n    projectList: projects,\n    filteredProjectList: projects,\n    loading: true\n  });\n  const [filterState, setFilterState] = useState('');\n\n  const projectListArray = projectState.projectList;\n\n  // Whenever searchState (representing the input in the search bar) changes, filter the project list\n  useEffect(() => {\n    setProjectState({\n      ...projectState,\n      filteredProjectList: projectListArray.filter(project => {\n        return (\n          // allow users to search by tech\n          project.tech.toString().toLowerCase().indexOf(filterState) !== -1\n        );\n      }),\n      loading: false\n    });\n\n    // eslint-disable-next-line\n  }, [filterState]);\n\n  return (\n    <div>\n      {projectState.loading ? (\n        <ReactLoading\n          type={'bars'}\n          color={'white'}\n          style={{ alignContent: 'center' }}\n        />\n      ) : (\n        <AnimateSharedLayout>\n          <h1 className='recentProjects otherText'>Recent Projects</h1>\n          <hr />\n\n          <ProjectFilter filter={setFilterState} />\n\n          <hr />\n          <Container>\n            <ScrollAnimation animateIn='fadeIn' animateOut='fadeOut'>\n              {projectState.filteredProjectList.map(projectInfo => (\n                <ProjectImage\n                  layout\n                  projectInfo={projectInfo}\n                  key={projectInfo.id}\n                  layoutId='projects'\n                />\n              ))}\n            </ScrollAnimation>\n          </Container>\n        </AnimateSharedLayout>\n      )}\n    </div>\n  );\n};\n\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}